# -*- coding: utf-8 -*-
"""Cyber3DModel2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15wjyUh3iWwab-LH6jGfE8UnZnQKgGjlK

**Importing dependency**
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from tensorflow import keras
from keras.layers import Dense
from keras.models import Sequential, load_model
from sklearn.metrics import accuracy_score

"""**Loading the CSV file and getting all the featured coulumns**"""

df = pd.read_csv('data.csv')

# Specify the columns you want to use as features
feature_columns = ["X_Count", "Y_Count", "E_Count", "Z_Count", "F_Count", "M82_Count",
                   "G92_Count", "G280_Count", "G0_Count", "G1_Count", "M106_Count",
                   "M204_Count", "M205_Count", "M104_Count", "M107_Count", "G91_Count",
                   "T1_Count", "G90_Count", "S0 _Count", "G11_Count", "G10_Count", "M109_Count"]

"""**X  This represents the input features of your mode (input var)**"""

X = df[feature_columns]

"""**Y This represents the target variable (output var) which is file type**"""

y = LabelEncoder().fit_transform(df['FileType'])

"""**Training the models**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, random_state=42)

print(X.head())

"""**Build and Compile Model**"""

model = Sequential()
model.add(Dense(units=32, activation='relu', input_dim=X_train.shape[1]))
model.add(Dense(units=64, activation='relu'))
model.add(Dense(units=len(set(y)), activation='softmax'))

model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

"""**Fit, Predict and Evaluate**"""

model.fit(X_train, y_train, epochs=200, batch_size=32, validation_split=0.2)

y_hat = model.predict(X_test)
y_hat_classes = y_hat.argmax(axis=-1)

accuracy = accuracy_score(y_test, y_hat_classes)
print("Accuracy:", accuracy)

model.save('Cyber3DModel2')
del model
model = load_model('tfmodel')